version: 1.2.{build}
image: Visual Studio 2022
branches:
  only:
  - master
  - /\d+\.\d+\.\d+/
pull_requests:
  do_not_increment_build_number: false
skip_branch_with_pr: true
configuration: Release
shallow_clone: true

skip_commits:
  files:
    - '**/*.yml'
    - '**/*.md'
    - .gitignore
    - .editorconfig
  message: /updated readme.*|update readme.*s|update docs.*|update version.*|update changelog.*/

init:
  - cmd: dotnet --version
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        try
        {
           Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"
        }
        catch
        {
           Write-Output "Update-AppveyorBuild Fail to change version to TAG: '$env:APPVEYOR_REPO_TAG_NAME'"   -ForegroundColor Red
           Write-Output "Exception Error: $PSItem.Exception.Message" -ForegroundColor Red
           Write-Output "Exception Error: $PSItem.Exception.GetType().Name" -ForegroundColor Red 
        }
      }
  - ps: |
      Write-Host "APPVEYOR_BUILD_VERSION='$env:APPVEYOR_BUILD_VERSION'" -ForegroundColor Yellow
      Write-Host "APPVEYOR_REPO_TAG_NAME= '$env:APPVEYOR_REPO_TAG_NAME'" -ForegroundColor Yellow
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet tool install -g dotnet-sonarscanner }'
  - cmd: dotnet tool install -g minicover

dotnet_csproj:
  patch: true 
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

nuget:
  project_feed: true 

before_build: 
  - dotnet restore
build_script:
  # Ensure Java 15, required by Sonar
  - set JAVA_HOME=C:\Program Files\Java\jdk19
  - if not exist "%JAVA_HOME%\bin\java.exe" (echo "%JAVA_HOME%\bin\java.exe does not exist" && exit 1)
  - set PATH=%JAVA_HOME%\bin;%PATH%
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet sonarscanner begin /k:"adrianiftode_FluentAssertions.Web" /o:adrianiftode-github /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$env:SONAR_TOKEN" /v:"$env:APPVEYOR_BUILD_NUMBER" /d:sonar.cs.opencover.reportsPaths="opencovercoverage.xml" /d:sonar.coverage.exclusions=test/**}'
  - dotnet build -c %CONFIGURATION% /p:Version=%APPVEYOR_BUILD_VERSION%
  - minicover instrument
test_script:
  - dotnet test --no-restore --no-build --nologo --verbosity:q
after_test:
  - minicover uninstrument
  - minicover opencoverreport
  # will fail when the test coverage is lower than the threshold
  - minicover report --threshold 90
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet sonarscanner end /d:sonar.login="$env:SONAR_TOKEN" }'
  - dotnet pack --no-build --include-symbols -c %CONFIGURATION% /p:PackageVersion=%APPVEYOR_BUILD_VERSION%

artifacts:
  - path: '**\*.nupkg'
    name: NuGet

deploy:
  - provider: NuGet
    api_key:
     secure: DbQndcBhytd1c9OjkuTZDytpWBemxjl0eskUAhXO6y4L0TdjH2H6SubzOnWCH7bD
    skip_symbols: true
    artifact: /.*\.nupkg/
    on:
      appveyor_repo_tag: true

  - provider: GitHub
    release: $(APPVEYOR_BUILD_VERSION)
    auth_token:
        secure: WXU/Xj3ntIZVx89KDAa/V9FszL7l3pOFpFdWVEsKggcn7bGviwOOpm9RSxZ7q+biREJXWL+1hYhcXQltmQDbaX7ga5jNMGyFFWpIWSDpb8x+1Aeg10fZX1SEWQ0t6VUr
    artifact: /.*\.nupkg/
    on:
      appveyor_repo_tag: true