version: 1.1.{build}
image: Visual Studio 2019
branches:
  only:
  - master
pull_requests:
  do_not_increment_build_number: true
configuration: Release
shallow_clone: true

skip_commits:
  files:
    - '**/*.yml'
    - '**/*.md'
    - .gitignore
    - .editorconfig
  message: /updated readme.*|update readme.*s|update docs.*|update version.*|update changelog.*/

init:
  - cmd: dotnet --version
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet tool install -g dotnet-sonarscanner }'
  - cmd: dotnet tool install -g minicover

dotnet_csproj:
  patch: true 
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'

nuget:
  project_feed: true 

before_build: 
  - dotnet restore
build_script:
  # Begin SonarScanner
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet sonarscanner begin /k:"Moq.ILogger" /o:adrianiftode-github /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="$env:SONAR_TOKEN" /v:"$env:APPVEYOR_BUILD_NUMBER" /d:sonar.cs.opencover.reportsPaths="opencovercoverage.xml" /d:sonar.coverage.exclusions=test/**}'
  - dotnet build
  - minicover instrument
test_script:
  - dotnet test --no-restore --no-build
after_test:
  - minicover uninstrument
  - minicover opencoverreport
  # will fail when the test coverage is lower than the threshold
  - minicover report --threshold 90
  - ps: 'if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { & dotnet sonarscanner end /d:sonar.login="$env:SONAR_TOKEN" }'
  - dotnet pack --no-restore --include-symbols -c %CONFIGURATION%

artifacts:
  - path: '**\*.nupkg'
    name: NuGet

deploy:
  - provider: NuGet
    api_key:
     secure: ltIAAp7G642Ic9Ci86fmc9odnLwPOLK1H5tbcON6cQbocgimxqjd7eWzMV/AmWnt
    skip_symbols: false
    artifact: /.*\.nupkg/
    on: 
      branch: master